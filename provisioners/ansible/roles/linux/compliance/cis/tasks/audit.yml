---
# This will be executed regardless of if the system architecture is 32-bit or 64-bit
# With the current rules configuration, the following CIS policies are applied:
# CIS, 4.1.3 - Ensure events that modify date and time information are collected
# CIS, 4.1.4 - Ensure events that modify user/group information are collected
# CIS, 4.1.5 - Ensure events that modify the system's network environment are collected
# CIS, 4.1.6 - Ensure events that modify the system's Mandatory Access Controls are collected
# CIS, 4.1.7 - Ensure login and logout events are collected
# CIS, 4.1.8 - Ensure session initiation information is collected
# CIS, 4.1.9 - Ensure discretionary access control permission modification events are collected
# CIS, 4.1.10 - Ensure unsuccessful unauthorized file access attempts are collected
# CIS, 4.1.12 - Ensure successful file system mounts are collected
# CIS, 4.1.13 - Ensure file deletion events by users are collected
# CIS, 4.1.14 - Ensure changes to system administration scope (sudoers) is collected
# CIS, 4.1.15 - Ensure system administrator command executions (sudo) are collected
# CIS, 4.1.16 - Ensure kernel module loading and unloading is collected
# CIS, 4.1.17 - Ensure the audit configuration is immutable
- name: Generate auditd configuration file for 32bits processes
  copy:
    src: '../conf/auditd-x86.rules'
    dest: '/etc/audit/rules.d/cis-x86.rules'
    owner: root
    group: root
    mode: '0640'
  when: > 
     ansible_architecture == 'x86' or
     ansible_architecture == 'x86_64'
  notify: restart_auditd 
  tags: ['configuration']

# Some of the CIS recommendations have already been fulfilled due to the execution of the previous task
# With the current rules configuration, the following CIS policies are applied:
# CIS, 4.1.3 - Ensure events that modify date and time information are collected
# CIS, 4.1.4 - Ensure events that modify user/group information are collected
# CIS, 4.1.5 - Ensure events that modify the system's network environment are collected
# CIS, 4.1.6 - Ensure events that modify the system's Mandatory Access Controls are collected
# CIS, 4.1.7 - Ensure login and logout events are collected
# CIS, 4.1.8 - Ensure session initiation information is collected
# CIS, 4.1.9 - Ensure discretionary access control permission modification events are collected
# CIS, 4.1.10 - Ensure unsuccessful unauthorized file access attempts are collected
# CIS, 4.1.12 - Ensure successful file system mounts are collected
# CIS, 4.1.13 - Ensure file deletion events by users are collected
# CIS, 4.1.14 - Ensure changes to system administration scope (sudoers) is collected
# CIS, 4.1.15 - Ensure system administrator command executions (sudo) are collected
# CIS, 4.1.16 - Ensure kernel module loading and unloading is collected
# CIS, 4.1.17 - Ensure the audit configuration is immutable
- name: Generate auditd configuration file for 64bits processes
  copy:
    src: '../conf/auditd-x86-64.rules'
    dest: '/etc/audit/rules.d/cis-x86-64.rules'
    owner: root
    group: root
    mode: '0640'
  when: ansible_architecture == 'x86_64' 
  notify: restart_auditd 
  tags: ['configuration']

# To enable this, you should configure an adequate max_log_file_size (in MB) for your system
# - name: CIS, 4.1.2.1 - Ensure audit log storage size is configured
#   lineinfile:
#     path: '/etc/audit/auditd.conf'
#     state: present
#     regexp: '^max_log_file'
#     line: 'max_log_file = {{ max_log_file_size }}' # In MB
#   tags: ['configuration']

- name: CIS, 4.1.2.2 - Ensure audit logs are not automatically deleted
  lineinfile:
    path: '/etc/audit/auditd.conf'
    state: present
    regexp: '^max_log_file_action'
    line: 'max_log_file_action = keep_logs'
  tags: ['configuration']

# You can choose to mail the report generated after each periodic execution of AIDE to a designated user (set linux_admin_user)
- name: Configure periodic audits
  block:
    - name: Audit summary
      cron:
        name: Audit summary
        minute: '00'
        hour: '10'
        day: '5'
        user: root
        job: /usr/sbin/aureport --summary -i -ts this-month -te now #| mail -s "Audit summary" {{ linux_admin_user }}
    - name: Audit authentication events
      cron:
        name: Audit and report about authentication events
        minute: '05'
        hour: '10'
        day: '5'
        user: root
        job: /usr/sbin/aureport --auth -i -ts this-month -te now #| mail -s "Audit authentication events" {{ linux_admin_user }}
    - name: Audit account modifications events
      cron:
        name: Audit and report account modifications events
        minute: '15'
        hour: '10'
        day: '5'
        user: root
        job: /usr/sbin/aureport --mods -i -ts this-month -te now #| mail -s "Audit account modification events" {{ linux_admin_user }} 
    - name: Audit anomalies events
      cron:
        name: Audit and report anomalies events
        minute: '25'
        hour: '10'
        day: '5'
        user: root
        job: /usr/sbin/aureport --anomaly -i -ts this-month -te now #| mail -s "Audit anomalies events" {{ linux_admin_user }}
    - name: Audit anomalies events
      cron:
        name: Audit and report configuration changes events
        minute: '35'
        hour: '10'
        day: '5'
        user: root
        job: /usr/sbin/aureport --config -i -ts this-month -te now #| mail -s "Audit config changes events" {{ linux_admin_user }}
  tags: ['configuration']

- name: Auditd behaviour on low disk space
  lineinfile:
    path: '/etc/audit/auditd.conf'
    state: present
    regexp: '^space_left_action'
    line: 'space_left_action = SYSLOG'
  tags: ['configuration']

- name: GRUB2 configuration
  block:
    - name: Make sure the system is GRUB2 compatible
      stat:
        path: '{{ grub2_conf_file }}'
      register: grub2_compatible
    - name: CIS, 4.1.1.3 - Ensure auditing for processes that start prior to auditd is enabled
      lineinfile:
        path: '{{ grub2_conf_file }}'
        state: present
        owner: root
        group: root
        mode: "u=rw,g=r,o=r"
        regexp: '^GRUB_CMDLINE_LINUX='
        line: 'GRUB_CMDLINE_LINUX="audit=1"'
      when: grub2_compatible.stat.exists == true
      notify: update_grub2
    - name: CIS, 4.1.1.4 - Ensure audit_backlog_limit is sufficient
      lineinfile:
        path: '{{ grub2_conf_file }}'
        state: present
        owner: root
        group: root
        mode: "u=rw,g=r,o=r"
        regexp: '^GRUB_CMDLINE_LINUX='
        line: 'GRUB_CMDLINE_LINUX="audit_backlog_limit=8192"'
      when: grub2_compatible.stat.exists == true
      notify: update_grub2
  tags: ['configuration']
